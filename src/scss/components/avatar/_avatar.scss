@use "../../mixins/index.scss" as mix;

@mixin abs-content($width, $height) {
  content: '';
  position: absolute;
  width: $width;
  height: $height;
}

.avatar-container {
  position: relative;
  width: 130px;
  height: 130px;
  border-radius: 50%;
  margin: 10px;
  background: map-get(
    $map: mix.$color-gradients,
    $key: 'gradient-1-to-bottom-right'
  );
  * {
    z-index: 1;
  }
  > span {
    @include abs-content($width: 150%, $height: 150%);
    @include mix.posXY($x: 50%, $y: 50%, $focus: 'center');
    z-index: -2;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.212);
    animation: avatar_blob 2s infinite;
    animation-timing-function: mix.$transition-soft-end;
  }
  &::before {
    @include abs-content($width: 100%, $height: 100%);
    @include mix.posXY($x: 50%, $y: 50%, $focus: 'center');
    border-radius: 50%;
    box-shadow: -6px -6px 22px -2.2px mix.$color-primary-orange;
  }
  &::after {
    @include abs-content($width: 100%, $height: 100%);
    @include mix.posXY($x: 50%, $y: 50%, $focus: 'center');
    border-radius: 50%;
    box-shadow: 6px 6px 22px -2.2px mix.$color-primary-red;
  }
  > img {
    position: absolute;
    @include mix.posXY($x: 50%, $y: 50%, $focus: 'center');
    border-radius: 50%;
    width: 105px;
    height: 105px;
    object-fit: cover;
    object-position: center center;
  }

  @include mix.breakpoint(desktop) {
    position: absolute;
    top: 57px;
    left: 67px;
  }

  @include mix.breakpoint(laptop) {
    position: relative;
    top: unset;
    left: unset;
  }
}

@keyframes avatar_blob {
  0% {
    width: 40%;
    height: 40%;
    opacity: 1;
  }
  100% {
    width: 180%;
    height: 180%;
    opacity: 0;
  }
}
